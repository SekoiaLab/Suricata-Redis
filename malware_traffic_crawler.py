###############################################################################
#
#   Suricata_Redis - Poc de code de la NDH2K14
#    cert@sekoia.fr - http://www.sekoia.fr
#   Copyright (C) 2014  SEKOIA
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################
from bs4 import BeautifulSoup
import os
import requests
import shutil


if __name__ == '__main__':
    url='http://malware-traffic-analysis.net/'
    url_index=url+'index.html'
    r  = requests.get(url_index)

    data = r.text

    soup = BeautifulSoup(data)

    for link in soup.find_all('a'):
        url_malware=url+link.get('href')    
        if url_malware != url_index:
            req=requests.get(url_malware)
            s=BeautifulSoup(req.text)
            for l in s.find_all('a'):
                file_ext=l.get('href')
                if file_ext.endswith('pcap'):
                    print 'download: '+file_ext
                    url_token=url_malware.split('/')
                    url_token=url_token[:len(url_token)-1]
                    pcap_url= '/'.join(url_token)+'/'+file_ext
                    pcap_data=requests.get(pcap_url,stream=True)
                    if file_ext.find('/') != -1:
                        file_ext=file_ext.replace('/','_')
                    if not os.path.isfile('pcaps/'+file_ext):
                        with open('pcaps/'+file_ext,'wb') as out_file:
                            shutil.copyfileobj(pcap_data.raw, out_file)
        pass